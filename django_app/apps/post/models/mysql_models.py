from django.db import models
from django.db.models import CharField, BooleanField, FloatField
from django.utils.dateparse import parse_date
from django.utils.translation import gettext_lazy as _
from django.db.models import ForeignKey, DateTimeField

#----------#

from apps.user.models.mysql_models import User

#======================================================================================================================#
# PostManager
#======================================================================================================================#

class PostManager(models.Manager):
    
    #------------------------------------------------------------------------------------------------------------------#

    def create_post(self):
        pass

#======================================================================================================================#
# End of PostManager
#======================================================================================================================#

#======================================================================================================================#
# Post
#======================================================================================================================#

class Post(models.Model):
    
    #------------------------------------------------------------------------------------------------------------------#

    class Meta:
        db_table = 'post'

    #------------------------------------------------------------------------------------------------------------------#
     
    class Post_Visibility(models.TextChoices):
        PRIVATE = 'PR'
        FOLLOWERS_ONLY = 'FO'
        PUBLIC = 'PU'

    class Prompt_Visibility(models.TextChoices):
        PRIVATE = 'PR'
        FOLLOWERS_ONLY = 'FO'
        PUBLIC = 'PU'

    #------------------------------------------------------------------------------------------------------------------#

    objects = PostManager()

    #------------------------------------------------------------------------------------------------------------------#

    template = BooleanField(null = False, default = False)
    caption_ref = CharField(max_length = 255, null = True)
    # shares = 
    user_id = ForeignKey(User, on_delete = models.CASCADE, related_name = 'post', null = False)
    prompt_ref = CharField(max_length = 255, null = True)
    creation_timestamp = DateTimeField(auto_now_add = True)
    latitude = FloatField(null = True)
    longitude = FloatField(null = True)
    post_visibility = CharField(max_length = 2, choices = Post_Visibility.choices, default = Post_Visibility.PUBLIC.value)
    ref_post_id = ForeignKey('self', on_delete = models.CASCADE, null = True, related_name = 'ref_post')
    prompt_visibility = CharField(max_length = 2, choices = Prompt_Visibility.choices, default = Prompt_Visibility.PUBLIC.value)

    USER_ID = 'user_id'

#======================================================================================================================#
# End of Post
#======================================================================================================================#

#======================================================================================================================#
# PostReportManager
#======================================================================================================================#

class PostReportManager(models.Manager):
    
    #------------------------------------------------------------------------------------------------------------------#

    def create_post(self):
        pass

#======================================================================================================================#
# End of PostReportManager
#======================================================================================================================#

#======================================================================================================================#
# PostReport
#======================================================================================================================#

class PostReport(models.Model):
    
    #------------------------------------------------------------------------------------------------------------------#

    class Meta:
        db_table = 'post_report'

    #------------------------------------------------------------------------------------------------------------------#

    class Report(models.TextChoices):
        HATE = 'HAT'
        HARASSMENT = 'HAR'
        VIOLENT_SPEECH = 'VIS'
        CHILD_SAFETY = 'CHS'
        PRIVACY = 'PRI'
        SPAM = 'SPA'
        SELF_HARM = 'SEH'
        SENSITIVE_MEDIA = 'SEM'
        IMPERSONATION = 'IMP'
        VIOLENT_ENTITIES = 'VIE'
        INTELLECTUAL_PROPERTY_VIOLATION = 'IPV'
        OTHER = 'OTH'

    #------------------------------------------------------------------------------------------------------------------#

    objects = PostReportManager()

    #------------------------------------------------------------------------------------------------------------------#

    post_id = ForeignKey(Post, on_delete = models.CASCADE, null = False, related_name = 'post_report')
    user_id = ForeignKey(User, on_delete = models.CASCADE, related_name = 'post_report', null = False)
    report = CharField(max_length = 3, choices = Report.choices, null = False)
    user_report = CharField(max_length = 255, null = True)

    POST_ID = 'post_id'
    USER_ID = 'user_id'

#======================================================================================================================#
# End of PostReport
#======================================================================================================================#

#======================================================================================================================#
# GenMediaRefManager
#======================================================================================================================#

class GenMediaRefManager(models.Manager):
    
    #------------------------------------------------------------------------------------------------------------------#

    def create_post(self):
        pass

#======================================================================================================================#
# End of GenMediaRefManager
#======================================================================================================================#

#======================================================================================================================#
# GenMediaRef
#======================================================================================================================#

class GenMediaRef(models.Model):
    
    #------------------------------------------------------------------------------------------------------------------#

    class Meta:
        db_table = 'gen_media_ref'

    #------------------------------------------------------------------------------------------------------------------#

    objects = GenMediaRefManager()

    #------------------------------------------------------------------------------------------------------------------#

    post_id = ForeignKey(Post, on_delete = models.CASCADE, null = False, related_name = 'gen_media_ref')
    gen_media_ref = CharField(max_length = 255, null = False, unique = True)

    POST_ID = 'post_id'
    GEN_MEDIA_REF = 'gen_media_ref'

#======================================================================================================================#
# End of GenMediaRef
#======================================================================================================================#

#======================================================================================================================#
# PromptedMediaRefManager
#======================================================================================================================#

class PromptedMediaRefManager(models.Manager):
    
    #------------------------------------------------------------------------------------------------------------------#

    def create_post(self):
        pass

#======================================================================================================================#
# End of PromptedMediaRefManager
#======================================================================================================================#

#======================================================================================================================#
# PromptedMediaRef
#======================================================================================================================#

class PromptedMediaRef(models.Model):
    
    #------------------------------------------------------------------------------------------------------------------#

    class Meta:
        db_table = 'prompted_media_ref'

    #------------------------------------------------------------------------------------------------------------------#

    objects = PromptedMediaRefManager()

    #------------------------------------------------------------------------------------------------------------------#

    post_id = ForeignKey(Post, on_delete = models.CASCADE, null = False, related_name = 'prompted_media_ref')
    prompted_media_ref = CharField(max_length = 255, null = False, unique = True)

    POST_ID = 'post_id'
    PROMPTED_MEDIA_REF = 'prompted_media_ref'

#======================================================================================================================#
# End of PromptedMediaRef
#======================================================================================================================#

#======================================================================================================================#
# ImageTextRefManager
#======================================================================================================================#

class ImageTextRefManager(models.Manager):
    
    #------------------------------------------------------------------------------------------------------------------#

    def create_post(self):
        pass

#======================================================================================================================#
# End of ImageTextRefManager
#======================================================================================================================#

#======================================================================================================================#
# ImageTextRef
#======================================================================================================================#

class ImageTextRef(models.Model):
    
    #------------------------------------------------------------------------------------------------------------------#

    class Meta:
        db_table = 'image_text_ref'

    #------------------------------------------------------------------------------------------------------------------#

    objects = ImageTextRefManager()

    #------------------------------------------------------------------------------------------------------------------#

    post_id = ForeignKey(Post, on_delete = models.CASCADE, null = False, related_name = 'image_text_ref')
    image_text_ref = CharField(max_length = 255, null = False, unique = True)

    POST_ID = 'post_id'
    IMAGE_TEXT_REF = 'image_text_ref'

#======================================================================================================================#
# End of ImageTextRef
#======================================================================================================================#
